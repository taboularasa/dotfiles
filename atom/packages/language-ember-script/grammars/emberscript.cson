'comment': 'EmberScript'
'fileTypes': [
  'em'
]
'firstLineMatch': '^#!.*\\bemberscript'
'foldingStartMarker': '^\\s*class\\s+\\S.*$|.*(->|=>|~>)\\s*$|.*[\\[{]\\s*$'
'foldingStopMarker': '^\\s*$|^\\s*[}\\]]\\s*$'
'keyEquivalent': '^~C'
'name': 'EmberScript'
'patterns': [
  {
    'captures':
      '1':
        'name': 'variable.parameter.function.emberscript'
      '2':
        'name': 'storage.type.function.emberscript'
    'comment': 'match stuff like: a -> â€¦ '
    'match': '(\\([^()]*?\\))\\s*([=-~]>)'
    'name': 'meta.inline.function.emberscript'
  }
  {
    'captures':
      '1':
        'name': 'keyword.operator.new.emberscript'
      '2':
        'name': 'entity.name.type.instance.emberscript'
    'match': '(new)\\s+(\\w+(?:\\.\\w*)*)'
    'name': 'meta.class.instance.constructor'
  }
  {
    'begin': '\'\'\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.emberscript'
    'end': '\'\'\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.emberscript'
    'name': 'string.quoted.heredoc.emberscript'
  }
  {
    'begin': '"""'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.emberscript'
    'end': '"""'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.emberscript'
    'name': 'string.quoted.double.heredoc.emberscript'
    'patterns': [
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.emberscript'
      }
      {
        'include': '#interpolated_emberscript'
      }
    ]
  }
  {
    'begin': '`'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.emberscript'
    'end': '`'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.emberscript'
    'name': 'string.quoted.script.emberscript'
    'patterns': [
      {
        'match': '\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
        'name': 'constant.character.escape.emberscript'
      }
    ]
  }
  {
    'begin': '(?<!#)###(?!#)'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.emberscript'
    'end': '###(?:[ \\t]*\\n)'
    'name': 'comment.block.emberscript'
    'patterns': [
      {
        'match': '@\\w*'
        'name': 'storage.type.annotation.emberscript'
      }
    ]
  }
  {
    'begin': '(#)(?!\\{)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.comment.emberscript'
    'end': '\\n'
    'name': 'comment.line.number-sign.emberscript'
  }
  {
    'begin': '/{3}'
    'end': '/{3}[imgy]{0,4}'
    'name': 'string.regexp.emberscript'
    'patterns': [
      {
        'include': '#interpolated_emberscript'
      }
      {
        'include': '#embedded_comment'
      }
    ]
  }
  {
    'match': '/(?![ /*+?])([^\\\\]|\\\\.)*?/[igmy]{0,4}(?![a-zA-Z0-9])'
    'name': 'string.regexp.emberscript'
  }
  {
    'match': '(?x)\n\t\t\t\t\\b(?<![\\.\\$])(\n\t\t\t\t\tbreak|by|catch|continue|else|finally|for|in|of|if|return|switch|\n\t\t\t\t\tthen|throw|try|unless|when|while|until|loop|do|(?<=for)\\s+own\n\t\t\t\t)(?!\\s*:)\\b\n\t\t\t'
    'name': 'keyword.control.emberscript'
  }
  {
    'match': '(?x)\n\t\t\t\tand=|or=|!|%|&|\\^|\\*|\\/|(\\-)?\\-(?!>)|\\+\\+|\\+|~|==|=(?!>)|!=|<=|>=|<<=|>>=|\n\t\t\t\t>>>=|<>|<|>|!|&&|\\.\\.(\\.)?|\\?|\\||\\|\\||\\:|\\*=|(?<!\\()/=|%=|\\+=|\\-=|&=|\n\t\t\t\t\\^=|\\b(?<![\\.\\$])(instanceof|new|delete|typeof|and|or|is|isnt|not|super)\\b\n\t\t\t'
    'name': 'keyword.operator.emberscript'
  }
  {
    'captures':
      '1':
        'name': 'variable.assignment.emberscript'
      '4':
        'name': 'punctuation.separator.key-value'
      '5':
        'name': 'keyword.operator.emberscript'
    'match': '([a-zA-Z\\$_](\\w|\\$|\\.)*\\s*(?!\\::)((:)|(=)(?!>))(?!(\\s*\\(.*\\))?\\s*([=-~]>)))'
    'name': 'variable.assignment.emberscript'
  }
  {
    'begin': '(?<=\\s|^)([\\[\\{])(?=.*?[\\]\\}]\\s+[:=])'
    'beginCaptures':
      '0':
        'name': 'keyword.operator.emberscript'
    'end': '([\\]\\}]\\s*[:=])'
    'endCaptures':
      '0':
        'name': 'keyword.operator.emberscript'
    'name': 'meta.variable.assignment.destructured.emberscript'
    'patterns': [
      {
        'include': '#variable_name'
      }
      {
        'include': '#instance_variable'
      }
      {
        'include': '#single_quoted_string'
      }
      {
        'include': '#double_quoted_string'
      }
      {
        'include': '#numeric'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'entity.name.function.emberscript'
      '2':
        'name': 'entity.name.function.emberscript'
      '3':
        'name': 'variable.parameter.function.emberscript'
      '4':
        'name': 'storage.type.function.emberscript'
    'match': '(?x)\n\t\t\t\t(?<=^|\\s)\n\t\t\t\t(?=@?[a-zA-Z\\$_])\n\t\t\t\t(\n\t\t\t\t\t@?[a-zA-Z\\$_](\\w|\\$|:|\\.)*\\s*\n\t\t\t\t\t(?=[:=](\\s*\\(.*\\))?\\s*([=-~]>))\n\t\t\t\t)\n\t\t\t'
    'name': 'meta.function.emberscript'
  }
  {
    'match': '[=-~]>'
    'name': 'storage.type.function.emberscript'
  }
  {
    'match': '\\b(?<!\\.)(true|on|yes)(?!\\s*[:=])\\b'
    'name': 'constant.language.boolean.true.emberscript'
  }
  {
    'match': '\\b(?<!\\.)(false|off|no)(?!\\s*[:=])\\b'
    'name': 'constant.language.boolean.false.emberscript'
  }
  {
    'match': '\\b(?<!\\.)null(?!\\s*[:=])\\b'
    'name': 'constant.language.null.emberscript'
  }
  {
    'match': '\\b(?<!\\.)(this|extends)(?!\\s*[:=])\\b'
    'name': 'variable.language.emberscript'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.class.emberscript'
      '2':
        'name': 'entity.name.type.class.emberscript'
      '3':
        'name': 'keyword.control.inheritance.emberscript'
      '4':
        'name': 'entity.other.inherited-class.emberscript'
      '5':
        'name': 'keyword.control.inheritance.emberscript'
      '6':
        'name': 'entity.other.inherited-class.emberscript'
    'match': '((?:class|mixin)\\b)\\s+(@?[a-zA-Z\\$_][\\w\\.]*)?(?:\\s+(extends)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*))?(?:\\s+(with)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*))?'
    'name': 'meta.class.emberscript'
  }
  {
    'match': '\\b(debugger|\\\\)\\b'
    'name': 'keyword.other.emberscript'
  }
  {
    'match': '(?x)\\b(\n\t\t\t\tArray|ArrayBuffer|Blob|Boolean|Date|document|Function|\n\t\t\t\tInt(8|16|32|64)Array|Math|Map|Number|\n\t\t\t\tObject|Proxy|RegExp|Set|String|WeakMap|\n\t\t\t\twindow|Uint(8|16|32|64)Array|XMLHttpRequest\n\t\t\t)\\b'
    'name': 'support.class.emberscript'
  }
  {
    'match': '\\b(console)\\b'
    'name': 'entity.name.type.object.emberscript'
  }
  {
    'match': '((?<=console\\.)(debug|warn|info|log|error|time|timeEnd|assert))\\b'
    'name': 'support.function.console.emberscript'
  }
  {
    'match': '(?x)\\b(\n\t\t\t\tdecodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require\n\t\t\t)\\b'
    'name': 'support.function.emberscript'
  }
  {
    'match': '(?x)((?<=\\.)(\n\t\t\t\tapply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|\n\t\t\t\tisPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|\n\t\t\t\treduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|\n\t\t\t\tunshift|valueOf\n\t\t\t))\\b'
    'name': 'support.function.method.array.emberscript'
  }
  {
    'match': '(?x)((?<=Array\\.)(\n\t\t\t\tisArray\n\t\t\t))\\b'
    'name': 'support.function.static.array.emberscript'
  }
  {
    'match': '(?x)((?<=Object\\.)(\n\t\t\t\tcreate|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|\n\t\t\t\tgetProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|\n\t\t\t\tisnt|keys|preventExtensions|seal\n\t\t\t))\\b'
    'name': 'support.function.static.object.emberscript'
  }
  {
    'match': '(?x)((?<=Math\\.)(\n\t\t\t\tabs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|\n\t\t\t\thypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|\n\t\t\t\ttan|tanh|trunc\n\t\t\t))\\b'
    'name': 'support.function.static.math.emberscript'
  }
  {
    'match': '(?x)((?<=Number\\.)(\n\t\t\t\tis(Finite|Integer|NaN)|toInteger\n\t\t\t))\\b'
    'name': 'support.function.static.number.emberscript'
  }
  {
    'match': '\\b(Infinity|NaN|undefined)\\b'
    'name': 'constant.language.emberscript'
  }
  {
    'match': '\\;'
    'name': 'punctuation.terminator.statement.emberscript'
  }
  {
    'match': ',[ |\\t]*'
    'name': 'meta.delimiter.object.comma.emberscript'
  }
  {
    'match': '\\.'
    'name': 'meta.delimiter.method.period.emberscript'
  }
  {
    'match': '\\{|\\}'
    'name': 'meta.brace.curly.emberscript'
  }
  {
    'match': '\\(|\\)'
    'name': 'meta.brace.round.emberscript'
  }
  {
    'match': '\\[|\\]\\s*'
    'name': 'meta.brace.square.emberscript'
  }
  {
    'include': '#instance_variable'
  }
  {
    'include': '#single_quoted_string'
  }
  {
    'include': '#double_quoted_string'
  }
  {
    'include': '#numeric'
  }
]
'repository':
  'double_quoted_string':
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.emberscript'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.emberscript'
        'name': 'string.quoted.double.emberscript'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.emberscript'
          }
          {
            'include': '#interpolated_emberscript'
          }
        ]
      }
    ]
  'embedded_comment':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.comment.emberscript'
        'match': '(?<!\\\\)(#).*$\\n?'
        'name': 'comment.line.number-sign.emberscript'
      }
    ]
  'instance_variable':
    'patterns': [
      {
        'match': '(@)([a-zA-Z_\\$]\\w*)?'
        'name': 'variable.other.readwrite.instance.emberscript'
      }
    ]
  'interpolated_emberscript':
    'patterns': [
      {
        'begin': '\\#\\{'
        'captures':
          '0':
            'name': 'punctuation.section.embedded.emberscript'
        'end': '\\}'
        'name': 'source.emberscript.embedded.source'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'numeric':
    'patterns': [
      {
        'match': '(?<!\\$)\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b'
        'name': 'constant.numeric.emberscript'
      }
    ]
  'single_quoted_string':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.emberscript'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.emberscript'
        'name': 'string.quoted.single.emberscript'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.emberscript'
          }
        ]
      }
    ]
  'variable_name':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'variable.assignment.emberscript'
        'match': '([a-zA-Z\\$_]\\w*(\\.\\w+)*)'
        'name': 'variable.assignment.emberscript'
      }
    ]
'scopeName': 'source.emberscript'
